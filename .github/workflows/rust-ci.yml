name: Rust CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Setup cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Cargo check
        run: cargo check

      - name: Check formatting
        run: cargo fmt --check

      - name: Run tests
        run: cargo test

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Log in to SDP Container Registry "Harbor"
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: cr.surf.nl
          username: ${{ secrets.CR_SURF_USERNAME }}
          password: ${{ secrets.CR_SURF_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract version from Cargo.toml
        id: version
        run: cargo read-manifest | jq -r '.version'

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            cr.surf.nl/edubadges-edubadges/edubadges/urlflatine:latest
            cr.surf.nl/edubadges-edubadges/edubadges/urlflatine:${{ steps.version.outputs.version }}
